[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/ItemContainer.js":"4","/app/src/components/UserContainer.js":"5","/app/src/components/UpdateItem.js":"6","/app/src/components/UpdateUser.js":"7","/app/src/components/ResetPassword.js":"8","/app/src/utils/history.js":"9","/app/src/utils/theme.js":"10","/app/src/utils/axios.js":"11","/app/src/components/Login.js":"12","/app/src/components/SearchItem.js":"13","/app/src/components/UserInfo.js":"14","/app/src/components/ItemList.js":"15","/app/src/components/CreateUser.js":"16","/app/src/components/CreateItem.js":"17","/app/src/components/UserList.js":"18"},{"size":2130,"mtime":1608746167745,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":292,"mtime":1606993689685,"results":"22","hashOfConfig":"20"},{"size":3494,"mtime":1608725808680,"results":"23","hashOfConfig":"20"},{"size":1596,"mtime":1608725997014,"results":"24","hashOfConfig":"20"},{"size":1899,"mtime":1608724887893,"results":"25","hashOfConfig":"20"},{"size":2563,"mtime":1609833813447,"results":"26","hashOfConfig":"20"},{"size":2175,"mtime":1609833813446,"results":"27","hashOfConfig":"20"},{"size":87,"mtime":1606922582701,"results":"28","hashOfConfig":"20"},{"size":545,"mtime":1607268519492,"results":"29","hashOfConfig":"20"},{"size":158,"mtime":1608477060220,"results":"30","hashOfConfig":"20"},{"size":1780,"mtime":1608725454886,"results":"31","hashOfConfig":"20"},{"size":670,"mtime":1608724886542,"results":"32","hashOfConfig":"20"},{"size":590,"mtime":1608479282810,"results":"33","hashOfConfig":"20"},{"size":2265,"mtime":1608111129852,"results":"34","hashOfConfig":"20"},{"size":1667,"mtime":1609836800878,"results":"35","hashOfConfig":"20"},{"size":1078,"mtime":1608724882405,"results":"36","hashOfConfig":"20"},{"size":3897,"mtime":1608746167744,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"15rozte",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},"/app/src/index.js",[],["86","87"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",["88","89"],"import UserContainer from \"./components/UserContainer\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n     return (\r\n       <div className=\"App\">\r\n            Home Page\r\n       </div>\r\n    )\r\n  }\r\n}\r\nexport default App;","/app/src/components/ItemContainer.js",["90","91"],"import CreateItem from './CreateItem';\r\nimport ItemList from './ItemList';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios';\r\nimport history from '../utils/history';\r\nimport SearchItem from './SearchItem';\r\nimport UserContainer from './UserContainer';\r\nimport UserInfo from './UserInfo';\r\n\r\nconst divStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between'\r\n}\r\n\r\nclass ItemContainer extends React.Component {\r\n\r\n  state = {\r\n    items: [],\r\n    user : [],\r\n    count : 0,\r\n    page : 0,\r\n    rowsPerPage : 5,\r\n    ItemRows : 0\r\n  }\r\n\r\n  getUID = () => {\r\n      let id = this.props.match.params.id;\r\n      return id;\r\n  }\r\n\r\n  error = err => {\r\n    console.log(err);\r\n    alert(\"Error\");\r\n  }\r\n\r\n  //get items regarding pagination\r\n  getItems = (id,page,rowsPerPage) => {\r\n    axios.get('/users/' + id + '/items/?page='+ page +'&rows=' + rowsPerPage).then(response => {\r\n      console.log(response);\r\n      this.setState({ items: response.data[1],count : response.data[0].length,user : response.data[2]})\r\n    }).catch(err => {\r\n      this.error(err)\r\n    })\r\n  }\r\n\r\n  getSearchedItems = name => {\r\n    axios.get('/users/' + this.getUID() + '/items/search/' + name ).then(response => {\r\n      this.setState({ items: response.data})\r\n    }).catch(err => {\r\n      this.error(err)\r\n    })\r\n  }\r\n\r\n  deleteItem = itemId => {\r\n    if(window.confirm(\"Are you sure?\")) {\r\n      axios.delete('/users/' + this.getUID() + '/items/' + itemId).then(() => {\r\n        this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  createItem = item => {\r\n    if(item.name && item.description) {\r\n      axios.post('/users/' + this.getUID() + '/items', item).then(() => {\r\n        this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    } else alert(\"Please complete all the fields\")\r\n  }\r\n\r\n  updateItem = itemId => {\r\n    history.push('/users/' + this.getUID() + '/items/' + itemId);\r\n  }\r\n\r\n  submitSearch = name =>{\r\n    this.getSearchedItems(name)\r\n    this.setState({count : this.state.items.length})\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n  }\r\n\r\n  handleChangePage = (event,page) => {\r\n    this.setState({ page : page }, () => {\r\n      let aux = this.state.page > 0 ? (this.state.rowsPerPage*page) : this.state.ItemRows;\r\n      this.getItems(this.getUID(),aux,this.state.rowsPerPage);\r\n    })\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value},() =>{\r\n      this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={divStyle}>\r\n          <CreateItem  onCreate={this.createItem} />\r\n          <UserInfo user={this.state.user}></UserInfo>\r\n          <SearchItem onSubmit={this.submitSearch}/>\r\n        </div>\r\n        <ItemList list={this.state.items}\r\n                  count={this.state.count}  \r\n                  page={this.state.page} \r\n                  rowsPerPage={this.state.rowsPerPage} \r\n                  onDelete={this.deleteItem} \r\n                  onUpdate={this.updateItem}\r\n                  action ={this.handleChangePage}\r\n                  action1 ={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemContainer;\r\n","/app/src/components/UserContainer.js",["92"],"import CreateUser from './CreateUser';\r\nimport UserList from './UserList';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios';\r\nimport history from '../utils/history';\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n  state = {\r\n    userInput: []\r\n  }\r\n\r\n  error = err => {\r\n    console.log(err);\r\n    alert(\"Error\");\r\n  }\r\n\r\n  getUsers = () => {\r\n    axios.get('/users/').then(response => {\r\n      this.setState({userInput: response.data})\r\n    }).catch(err => {\r\n      this.error(err)\r\n    })\r\n  }\r\n\r\n  deleteUser = userId => {\r\n    if(window.confirm(\"Are you sure?\")) {\r\n      axios.delete('/users/' + userId, { isActive: false}).then(() => {\r\n        this.getUsers();\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  createUser = user => {\r\n    if(user.firstName && user.lastName && user.password && user.birthday) {\r\n      axios.post('/users', user).then(() => {\r\n        this.getUsers();\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    } else alert(\"Please complete all the fields\")\r\n  }\r\n\r\n  updateUser = userId => {\r\n    history.push('/users/' + userId);\r\n  }\r\n\r\n  checkItems = userId => {\r\n    history.push('/users/' + userId + '/items/');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreateUser onCreate={this.createUser} />\r\n        <UserList list={this.state.userInput} onDelete={this.deleteUser} onUpdate={this.updateUser} onCheck = {this.checkItems} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContainer;\r\n","/app/src/components/UpdateItem.js",["93"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\n\r\nclass UpdateItem extends React.Component {\r\n    state = {\r\n        name: '',\r\n        description: ''\r\n    }\r\n\r\n    getUID = () => {\r\n        let uid = this.props.match.params.id\r\n        return uid;\r\n    }\r\n\r\n    getIID = () => {\r\n        let iid = this.props.match.params.item_id\r\n        return iid\r\n    }\r\n\r\n    getItem = () => {\r\n        axios.get('/users/' + this.getUID() + '/items/' + this.getIID()).then(response => {\r\n          this.setState({ ...response.data })\r\n        }).catch(err => {\r\n          console.log('eroare');\r\n        })\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.getItem(this.getIID())\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state.name && this.state.description) {\r\n            axios.put('/users/' + this.getUID() + '/items/' + this.getIID(), \r\n            { name: this.state.name, \r\n              description: this.state.description }).then(() => {\r\n                  alert(\"Item succesfully updated\");\r\n                  history.push('/users/' + this.getUID() + '/items')\r\n              }).catch(err => {\r\n                  console.log(err);\r\n              })\r\n        } else {\r\n            alert(\"Please complete all the fields\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <p><input name='name' type='text' onChange={this.onChange} value={this.state.name}/></p>\r\n                    <p><input name='description' type='text' onChange={this.onChange} value={this.state.description} /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default UpdateItem","/app/src/components/UpdateUser.js",["94"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\n\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    state = {\r\n        firstName : '',\r\n        lastName : '',\r\n        password : '',\r\n        birthday : '',\r\n        email: '',\r\n        formattedDate: ''\r\n    }\r\n\r\n    getUser = userId => {\r\n        axios.get('/users/' + userId).then(response => {\r\n          this.setState({ ...response.data })\r\n          this.formatDate(new Date(this.state.birthday))\r\n        }).catch(err => {\r\n          console.log('eroare');\r\n        })\r\n      }\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.id;\r\n        console.log(userID);\r\n        this.getUser(userID);\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    formatDate = birthday => {\r\n        let date = birthday.toISOString().substr(0, 10);\r\n        this.setState({ formattedDate: date })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state.firstName && this.state.lastName && this.state.password && this.state.birthday) {\r\n            axios.put('/users/' + this.props.match.params.id, \r\n            { firstName: this.state.firstName, \r\n            lastName: this.state.lastName,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            birthday: new Date(this.state.birthday)}).then(() => {\r\n                alert(\"User succesfully updated!\");\r\n                history.push('/users');\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        } else {\r\n            alert(\"Please complete all the fields!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <p><input name='firstName' type='text' value = {this.state.firstName} onChange={this.onChange} /></p>\r\n                    <p><input name='lastName' type='text' value = {this.state.lastName} onChange={this.onChange}   /></p>\r\n                    <p><input name='email' type='text' value={this.state.email} onChange={this.onChange} /></p>\r\n                    <p><input name='password' type='text' placeholder='New password' onChange={this.onChange}   /></p>\r\n                    <p><input name='birthday' type='date' defaultValue = {this.state.formattedDate} onChange={this.onChange}  /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\nexport default UpdateUser","/app/src/components/ResetPassword.js",[],"/app/src/utils/history.js",[],"/app/src/utils/theme.js",[],"/app/src/utils/axios.js",[],"/app/src/components/Login.js",["95","96"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\nimport UserContainer from './UserContainer';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        password: ''\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state.firstName && this.state.password){\r\n            console.log(this.state)\r\n            axios.post('/login', { firstName: this.state.firstName, password: this.state.password }).then(user => {\r\n                console.log(\"Here it is:\", user)\r\n                if(user.data.password) {\r\n                    alert(\"Succesful login!\");\r\n                    window.location.href = '/users'\r\n                } else {\r\n                    alert(\"Invalid credentials!\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                alert(\"Error\");\r\n            })\r\n        } else {\r\n            alert(\"Please complete all fields!\")\r\n        }\r\n    }\r\n    goToPage = () =>{\r\n        history.push('/resetPassword');\r\n    }\r\n    render() {\r\n        return  <div>\r\n                    <p><input name='firstName' type='text' onChange={this.onChange} value={this.state.firstName} placeholder='First name' /></p>\r\n                    <p><input name='password' type='password' onChange={this.onChange} value={this.state.password} placeholder=\"Password\" /></p>\r\n                    <button onClick={this.submitForm}>Login</button>\r\n                    <button onClick={this.goToPage}>ResetPassword</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default Login;","/app/src/components/SearchItem.js",[],"/app/src/components/UserInfo.js",[],"/app/src/components/ItemList.js",["97"],"import React from 'react';\r\nimport axios from '../utils/axios'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nclass ItemList extends React.Component {\r\n    render() {\r\n        return <div>\r\n                <h1>Items list: </h1>\r\n                <TableContainer>\r\n                <Table  aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Item</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Update</TableCell>\r\n                            <TableCell>Delete</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.props.list.length > 0 ? this.props.list.map((item) =>\r\n                            <TableRow key = {item._id}>\r\n                                <TableCell component =\"th\" scope = \"item\">{item.name}</TableCell>\r\n                                <TableCell>{item.description}</TableCell>\r\n                                <TableCell><button onClick={() => this.props.onUpdate(item._id)}>Update</button></TableCell>\r\n                                <TableCell><button onClick={() => this.props.onDelete(item._id)}>Delete</button></TableCell>\r\n                            </TableRow>\r\n                        ) : 'No items found'}\r\n                    </TableBody>\r\n                </Table>\r\n             </TableContainer>\r\n             <TablePagination \r\n                rowsPerPageOptions = {[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.props.count}\r\n                rowsPerPage={this.props.rowsPerPage}\r\n                page={parseInt(this.props.page)}\r\n                onChangePage={this.props.action}\r\n                onChangeRowsPerPage={this.props.action1}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n \r\nexport default ItemList;","/app/src/components/CreateUser.js",["98"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass CreateUser extends React.Component {\r\n    state = {\r\n        firstName : '',\r\n        lastName : '',\r\n        password : '',\r\n        email: '',\r\n        birthday : ''\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.onCreate({\r\n            firstName : this.state.firstName,\r\n            lastName : this.state.lastName,\r\n            password : this.state.password,\r\n            email: this.state.email,\r\n            birthday : new Date(this.state.birthday)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <p><input name  ='firstName' type='text' onChange={this.onChange} value={this.state.firstName} placeholder='Please enter your firstname' /></p>\r\n                    <p><input name='lastName' type='text' onChange={this.onChange} value={this.state.lastName} placeholder='Please enter your lastname' /></p>\r\n                    <p><input name='email' type='text' onChange={this.onChange} value={this.state.email} placeholder='Please enter your email address' /></p>\r\n                    <p><input name='password' type='password' onChange={this.onChange} value={this.state.password} placeholder=\"Enter a password\" /></p>\r\n                    <p><input name='birthday' type='date' onChange={this.onChange} value={this.state.date} placeholder='Enter your birthday date' /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\nexport default CreateUser","/app/src/components/CreateItem.js",["99"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass CreateItem extends React.Component {\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        userID: ''\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.onCreate({\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            userID: this.props.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <h2>Create Items</h2>\r\n                    <p><input name='name' type='text' onChange={this.onChange} value={this.state.name} placeholder='Please enter item name' /></p>\r\n                    <p><input name='description' type='text' onChange={this.onChange} value={this.state.description} placeholder='Please enter item description' /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default CreateItem","/app/src/components/UserList.js",["100","101","102"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\n  const useStyles = theme =>({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\n\r\nclass UserList  extends React.Component {\r\n    state = {\r\n        rowsPerPage: 5,\r\n        page: 0\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n    \r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    formatDate = birthday => {\r\n        let formatted_date = birthday.getDate() + '/' + (birthday.getMonth()+1) + '/' + birthday.getFullYear();\r\n        return formatted_date;\r\n    }\r\n\r\n    render() { \r\n        let { page, rowsPerPage } = this.state\r\n        return (<div>\r\n            <h1>\r\n                Users: \r\n            </h1>\r\n            <TableContainer>\r\n                <Table  aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>First Name</TableCell>\r\n                            <TableCell align=\"right\">Last Name</TableCell>\r\n                            <TableCell align=\"right\">Email</TableCell>\r\n                            <TableCell align=\"right\">Birthday</TableCell>\r\n                            <TableCell align=\"right\">isActive</TableCell>\r\n                            <TableCell align=\"right\">Delete</TableCell>\r\n                            <TableCell align=\"right\">Update</TableCell>\r\n                            <TableCell align=\"right\">Check Items</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {this.props.list.length > 0 ? this.props.list.slice(page * rowsPerPage, (page * rowsPerPage) + rowsPerPage).map((user) =>\r\n                            <TableRow key = {user.firstName}>\r\n                                <TableCell component =\"th\" scope = \"user\">{user.firstName}</TableCell>\r\n                                <TableCell align=\"right\">{user.lastName}</TableCell>\r\n                                <TableCell align=\"right\">{user.email}</TableCell>\r\n                                <TableCell align=\"right\">{this.formatDate(new Date(user.birthday))}</TableCell>\r\n                                <TableCell align=\"right\">{user.isActive.toString()}</TableCell>\r\n                                <TableCell align=\"right\"><button onClick={() => this.props.onDelete(user._id)}> Delete </button></TableCell>\r\n                                <TableCell align=\"right\"><button onClick={() => this.props.onUpdate(user._id)}> Update </button></TableCell>\r\n                                <TableCell align=\"right\"><button onClick={() => this.props.onCheck(user._id)}> Check Items </button></TableCell>\r\n\r\n                                \r\n                                \r\n                            </TableRow>\r\n                        ) : 'No users found'}\r\n                    </TableBody>\r\n                </Table>\r\n             </TableContainer>\r\n             <TablePagination \r\n                rowsPerPageOptions = {[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.props.list.length}\r\n                rowsPerPage={this.state.rowsPerPage}\r\n                page={this.state.page}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            />\r\n        </div>); \r\n    }\r\n}\r\nexport default UserList",["103","104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":8,"nodeType":"111","messageId":"112","endLine":1,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":21},{"ruleId":"109","severity":1,"message":"113","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":21},{"ruleId":"109","severity":1,"message":"114","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":13},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"113","line":2,"column":8,"nodeType":"111","messageId":"112","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"115","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":13},{"ruleId":"109","severity":1,"message":"116","line":12,"column":9,"nodeType":"111","messageId":"112","endLine":12,"endColumn":18},{"ruleId":"105","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'UserContainer' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'axios' is defined but never used.","'Paper' is defined but never used.","'useStyles' is assigned a value but never used.",["119"],["120"],"no-global-assign","no-unsafe-negation"]