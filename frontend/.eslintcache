[{"/app/src/index.js":"1","/app/src/reportWebVitals.js":"2","/app/src/App.js":"3","/app/src/components/ItemContainer.js":"4","/app/src/components/UserContainer.js":"5","/app/src/components/UpdateItem.js":"6","/app/src/components/UpdateUser.js":"7","/app/src/components/ResetPassword.js":"8","/app/src/utils/history.js":"9","/app/src/utils/theme.js":"10","/app/src/utils/axios.js":"11","/app/src/components/Login.js":"12","/app/src/components/SearchItem.js":"13","/app/src/components/UserInfo.js":"14","/app/src/components/ItemList.js":"15","/app/src/components/CreateUser.js":"16","/app/src/components/CreateItem.js":"17","/app/src/components/UserList.js":"18"},{"size":2070,"mtime":1609424702137,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1606495679289,"results":"21","hashOfConfig":"20"},{"size":278,"mtime":1606997063523,"results":"22","hashOfConfig":"20"},{"size":3371,"mtime":1608727001990,"results":"23","hashOfConfig":"20"},{"size":1527,"mtime":1608727001994,"results":"24","hashOfConfig":"20"},{"size":1835,"mtime":1607168551119,"results":"25","hashOfConfig":"20"},{"size":2490,"mtime":1609318250354,"results":"26","hashOfConfig":"20"},{"size":2124,"mtime":1609422827586,"results":"27","hashOfConfig":"20"},{"size":85,"mtime":1606922457508,"results":"28","hashOfConfig":"20"},{"size":521,"mtime":1607168551227,"results":"29","hashOfConfig":"20"},{"size":151,"mtime":1608203479961,"results":"30","hashOfConfig":"20"},{"size":1729,"mtime":1609840161995,"results":"31","hashOfConfig":"20"},{"size":647,"mtime":1607700840735,"results":"32","hashOfConfig":"20"},{"size":570,"mtime":1608481910144,"results":"33","hashOfConfig":"20"},{"size":2216,"mtime":1608481910144,"results":"34","hashOfConfig":"20"},{"size":1626,"mtime":1608739693707,"results":"35","hashOfConfig":"20"},{"size":1042,"mtime":1607700840735,"results":"36","hashOfConfig":"20"},{"size":3810,"mtime":1608739818457,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4ubz6w",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"/app/src/index.js",[],["85","86"],"/app/src/reportWebVitals.js",[],"/app/src/App.js",["87","88"],"import UserContainer from \"./components/UserContainer\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass App extends React.Component {\n  render() {\n     return (\n       <div className=\"App\">\n            Home Page\n       </div>\n    )\n  }\n}\nexport default App;","/app/src/components/ItemContainer.js",["89","90"],"import CreateItem from './CreateItem';\nimport ItemList from './ItemList';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from '../utils/axios';\nimport history from '../utils/history';\nimport SearchItem from './SearchItem';\nimport UserContainer from './UserContainer';\nimport UserInfo from './UserInfo';\n\nconst divStyle = {\n  display: 'flex',\n  justifyContent: 'space-between'\n}\n\nclass ItemContainer extends React.Component {\n\n  state = {\n    items: [],\n    user : [],\n    count : 0,\n    page : 0,\n    rowsPerPage : 5,\n    ItemRows : 0\n  }\n\n  getUID = () => {\n      let id = this.props.match.params.id;\n      return id;\n  }\n\n  error = err => {\n    console.log(err);\n    alert(\"Error\");\n  }\n\n  //get items regarding pagination\n  getItems = (id,page,rowsPerPage) => {\n    axios.get('/users/' + id + '/items/?page='+ page +'&rows=' + rowsPerPage).then(response => {\n      console.log(response);\n      this.setState({ items: response.data[1],count : response.data[0].length,user : response.data[2]})\n    }).catch(err => {\n      this.error(err)\n    })\n  }\n\n  getSearchedItems = name => {\n    axios.get('/users/' + this.getUID() + '/items/search/' + name ).then(response => {\n      this.setState({ items: response.data})\n    }).catch(err => {\n      this.error(err)\n    })\n  }\n\n  deleteItem = itemId => {\n    if(window.confirm(\"Are you sure?\")) {\n      axios.delete('/users/' + this.getUID() + '/items/' + itemId).then(() => {\n        this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\n      }).catch(err => {\n        this.error(err);\n      })\n    }\n  }\n\n  createItem = item => {\n    if(item.name && item.description) {\n      axios.post('/users/' + this.getUID() + '/items', item).then(() => {\n        this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\n      }).catch(err => {\n        this.error(err);\n      })\n    } else alert(\"Please complete all the fields\")\n  }\n\n  updateItem = itemId => {\n    history.push('/users/' + this.getUID() + '/items/' + itemId);\n  }\n\n  submitSearch = name =>{\n    this.getSearchedItems(name)\n    this.setState({count : this.state.items.length})\n  } \n\n  componentDidMount() {\n    this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\n  }\n\n  handleChangePage = (event,page) => {\n    this.setState({ page : page }, () => {\n      let aux = this.state.page > 0 ? (this.state.rowsPerPage*page) : this.state.ItemRows;\n      this.getItems(this.getUID(),aux,this.state.rowsPerPage);\n    })\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value},() =>{\n      this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <div style={divStyle}>\n          <CreateItem  onCreate={this.createItem} />\n          <UserInfo user={this.state.user}></UserInfo>\n          <SearchItem onSubmit={this.submitSearch}/>\n        </div>\n        <ItemList list={this.state.items}\n                  count={this.state.count}  \n                  page={this.state.page} \n                  rowsPerPage={this.state.rowsPerPage} \n                  onDelete={this.deleteItem} \n                  onUpdate={this.updateItem}\n                  action ={this.handleChangePage}\n                  action1 ={this.handleChangeRowsPerPage}\n        />\n      </div>\n    )\n  }\n}\n\nexport default ItemContainer;\n","/app/src/components/UserContainer.js",["91"],"import CreateUser from './CreateUser';\nimport UserList from './UserList';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from '../utils/axios';\nimport history from '../utils/history';\n\nclass UserContainer extends React.Component {\n\n  state = {\n    userInput: []\n  }\n\n  error = err => {\n    console.log(err);\n    alert(\"Error\");\n  }\n\n  getUsers = () => {\n    axios.get('/users/').then(response => {\n      this.setState({userInput: response.data})\n    }).catch(err => {\n      this.error(err)\n    })\n  }\n\n  deleteUser = userId => {\n    if(window.confirm(\"Are you sure?\")) {\n      axios.delete('/users/' + userId, { isActive: false}).then(() => {\n        this.getUsers();\n      }).catch(err => {\n        this.error(err);\n      })\n    }\n  }\n\n  createUser = user => {\n    if(user.firstName && user.lastName && user.password && user.birthday) {\n      axios.post('/users', user).then(() => {\n        this.getUsers();\n      }).catch(err => {\n        this.error(err);\n      })\n    } else alert(\"Please complete all the fields\")\n  }\n\n  updateUser = userId => {\n    history.push('/users/' + userId);\n  }\n\n  checkItems = userId => {\n    history.push('/users/' + userId + '/items/');\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  render() {\n    return (\n      <div>\n        <CreateUser onCreate={this.createUser} />\n        <UserList list={this.state.userInput} onDelete={this.deleteUser} onUpdate={this.updateUser} onCheck = {this.checkItems} />\n      </div>\n    )\n  }\n}\n\nexport default UserContainer;\n","/app/src/components/UpdateItem.js",["92"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from '../utils/axios'\nimport history from '../utils/history';\n\nclass UpdateItem extends React.Component {\n    state = {\n        name: '',\n        description: ''\n    }\n\n    getUID = () => {\n        let uid = this.props.match.params.id\n        return uid;\n    }\n\n    getIID = () => {\n        let iid = this.props.match.params.item_id\n        return iid\n    }\n\n    getItem = () => {\n        axios.get('/users/' + this.getUID() + '/items/' + this.getIID()).then(response => {\n          this.setState({ ...response.data })\n        }).catch(err => {\n          console.log('eroare');\n        })\n      }\n\n    componentDidMount() {\n        this.getItem(this.getIID())\n    }\n\n    onChange = event =>{\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    submitForm = () => {\n        if(this.state.name && this.state.description) {\n            axios.put('/users/' + this.getUID() + '/items/' + this.getIID(), \n            { name: this.state.name, \n              description: this.state.description }).then(() => {\n                  alert(\"Item succesfully updated\");\n                  history.push('/users/' + this.getUID() + '/items')\n              }).catch(err => {\n                  console.log(err);\n              })\n        } else {\n            alert(\"Please complete all the fields\")\n        }\n    }\n\n    render() {\n        return  <div>\n                    <p><input name='name' type='text' onChange={this.onChange} value={this.state.name}/></p>\n                    <p><input name='description' type='text' onChange={this.onChange} value={this.state.description} /></p>\n                    \n                    <button onClick={this.submitForm}>Submit</button>\n                </div>\n    }\n}\n\nexport default UpdateItem","/app/src/components/UpdateUser.js",["93"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from '../utils/axios'\nimport history from '../utils/history';\n\n\n\nclass UpdateUser extends React.Component {\n    state = {\n        firstName : '',\n        lastName : '',\n        password : '',\n        birthday : '',\n        email: '',\n        formattedDate: ''\n    }\n\n    getUser = userId => {\n        axios.get('/users/' + userId).then(response => {\n          this.setState({ ...response.data })\n          this.formatDate(new Date(this.state.birthday))\n        }).catch(err => {\n          console.log('eroare');\n        })\n      }\n\n    componentDidMount() {\n        let userID = this.props.match.params.id;\n        console.log(userID);\n        this.getUser(userID);\n    }\n\n    onChange = event =>{\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    formatDate = birthday => {\n        let date = birthday.toISOString().substr(0, 10);\n        this.setState({ formattedDate: date })\n    }\n\n    submitForm = () => {\n        if(this.state.firstName && this.state.lastName && this.state.password && this.state.birthday) {\n            axios.put('/users/' + this.props.match.params.id, \n            { firstName: this.state.firstName, \n            lastName: this.state.lastName,\n            password: this.state.password,\n            email: this.state.email,\n            birthday: new Date(this.state.birthday)}).then(() => {\n                alert(\"User succesfully updated!\");\n                history.push('/users');\n            }).catch(err => {\n                console.log(err);\n            })\n        } else {\n            alert(\"Please complete all the fields!\");\n        }\n    }\n\n    render() {\n        return  <div>\n                    <p><input name='firstName' type='text' value = {this.state.firstName} onChange={this.onChange} /></p>\n                    <p><input name='lastName' type='text' value = {this.state.lastName} onChange={this.onChange}   /></p>\n                    <p><input name='email' type='text' value={this.state.email} onChange={this.onChange} /></p>\n                    <p><input name='password' type='text' placeholder='New password' onChange={this.onChange}   /></p>\n                    <p><input name='birthday' type='date' defaultValue = {this.state.formattedDate} onChange={this.onChange}  /></p>\n                    \n                    <button onClick={this.submitForm}>Submit</button>\n                </div>\n    }\n}\nexport default UpdateUser","/app/src/components/ResetPassword.js",[],"/app/src/utils/history.js",[],"/app/src/utils/theme.js",[],"/app/src/utils/axios.js",[],"/app/src/components/Login.js",["94","95"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from '../utils/axios'\nimport history from '../utils/history';\nimport UserContainer from './UserContainer';\n\nclass Login extends React.Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        password: ''\n    }\n\n    onChange = event =>{\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    submitForm = () => {\n        if(this.state.firstName && this.state.password){\n            console.log(this.state)\n            axios.post('/login', { firstName: this.state.firstName, password: this.state.password }).then(user => {\n                console.log(\"Here it is:\", user)\n                if(user.data.password) {\n                    alert(\"Succesful login!\");\n                    window.location.href = '/users'\n                } else {\n                    alert(\"Invalid credentials!\");\n                }\n            }).catch(err => {\n                console.log(err);\n                alert(\"Error\");\n            })\n        } else {\n            alert(\"Please complete all fields!\")\n        }\n    }\n    goToPage = () =>{\n        history.push('/resetPassword');\n    }\n    render() {\n        return  <div>\n                    <p><input name='firstName' type='text' onChange={this.onChange} value={this.state.firstName} placeholder='First name' /></p>\n                    <p><input name='password' type='password' onChange={this.onChange} value={this.state.password} placeholder=\"Password\" /></p>\n                    <button onClick={this.submitForm}>Login</button>\n                    <button onClick={this.goToPage}>ResetPassword</button>\n                </div>\n    }\n}\n\nexport default Login;","/app/src/components/SearchItem.js",[],"/app/src/components/UserInfo.js",[],"/app/src/components/ItemList.js",["96"],"import React from 'react';\nimport axios from '../utils/axios'\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nclass ItemList extends React.Component {\n    render() {\n        return <div>\n                <h1>Items list: </h1>\n                <TableContainer>\n                <Table  aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Item</TableCell>\n                            <TableCell>Description</TableCell>\n                            <TableCell>Update</TableCell>\n                            <TableCell>Delete</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.props.list.length > 0 ? this.props.list.map((item) =>\n                            <TableRow key = {item._id}>\n                                <TableCell component =\"th\" scope = \"item\">{item.name}</TableCell>\n                                <TableCell>{item.description}</TableCell>\n                                <TableCell><button onClick={() => this.props.onUpdate(item._id)}>Update</button></TableCell>\n                                <TableCell><button onClick={() => this.props.onDelete(item._id)}>Delete</button></TableCell>\n                            </TableRow>\n                        ) : 'No items found'}\n                    </TableBody>\n                </Table>\n             </TableContainer>\n             <TablePagination \n                rowsPerPageOptions = {[5, 10, 25]}\n                component=\"div\"\n                count={this.props.count}\n                rowsPerPage={this.props.rowsPerPage}\n                page={parseInt(this.props.page)}\n                onChangePage={this.props.action}\n                onChangeRowsPerPage={this.props.action1}\n            />\n        </div>\n    }\n}\n \nexport default ItemList;","/app/src/components/CreateUser.js",["97"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass CreateUser extends React.Component {\n    state = {\n        firstName : '',\n        lastName : '',\n        password : '',\n        email: '',\n        birthday : ''\n    }\n\n    onChange = event =>{\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    submitForm = () => {\n        this.props.onCreate({\n            firstName : this.state.firstName,\n            lastName : this.state.lastName,\n            password : this.state.password,\n            email: this.state.email,\n            birthday : new Date(this.state.birthday)\n        })\n    }\n\n    render() {\n        return  <div>\n                    <p><input name  ='firstName' type='text' onChange={this.onChange} value={this.state.firstName} placeholder='Please enter your firstname' /></p>\n                    <p><input name='lastName' type='text' onChange={this.onChange} value={this.state.lastName} placeholder='Please enter your lastname' /></p>\n                    <p><input name='email' type='text' onChange={this.onChange} value={this.state.email} placeholder='Please enter your email address' /></p>\n                    <p><input name='password' type='password' onChange={this.onChange} value={this.state.password} placeholder=\"Enter a password\" /></p>\n                    <p><input name='birthday' type='date' onChange={this.onChange} value={this.state.date} placeholder='Enter your birthday date' /></p>\n                    \n                    <button onClick={this.submitForm}>Submit</button>\n                </div>\n    }\n}\nexport default CreateUser","/app/src/components/CreateItem.js",["98"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass CreateItem extends React.Component {\n    state = {\n        name: '',\n        description: '',\n        userID: ''\n    }\n\n    onChange = event =>{\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    submitForm = () => {\n        this.props.onCreate({\n            name: this.state.name,\n            description: this.state.description,\n            userID: this.props.id\n        })\n    }\n\n    render() {\n        return  <div>\n                    <h2>Create Items</h2>\n                    <p><input name='name' type='text' onChange={this.onChange} value={this.state.name} placeholder='Please enter item name' /></p>\n                    <p><input name='description' type='text' onChange={this.onChange} value={this.state.description} placeholder='Please enter item description' /></p>\n                    \n                    <button onClick={this.submitForm}>Submit</button>\n                </div>\n    }\n}\n\nexport default CreateItem","/app/src/components/UserList.js",["99","100","101"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n  const useStyles = theme =>({\n    table: {\n      minWidth: 700,\n    },\n  });\n\nclass UserList  extends React.Component {\n    state = {\n        rowsPerPage: 5,\n        page: 0\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n    \n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    formatDate = birthday => {\n        let formatted_date = birthday.getDate() + '/' + (birthday.getMonth()+1) + '/' + birthday.getFullYear();\n        return formatted_date;\n    }\n\n    render() { \n        let { page, rowsPerPage } = this.state\n        return (<div>\n            <h1>\n                Users: \n            </h1>\n            <TableContainer>\n                <Table  aria-label=\"customized table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>First Name</TableCell>\n                            <TableCell align=\"right\">Last Name</TableCell>\n                            <TableCell align=\"right\">Email</TableCell>\n                            <TableCell align=\"right\">Birthday</TableCell>\n                            <TableCell align=\"right\">isActive</TableCell>\n                            <TableCell align=\"right\">Delete</TableCell>\n                            <TableCell align=\"right\">Update</TableCell>\n                            <TableCell align=\"right\">Check Items</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                    {this.props.list.length > 0 ? this.props.list.slice(page * rowsPerPage, (page * rowsPerPage) + rowsPerPage).map((user) =>\n                            <TableRow key = {user.firstName}>\n                                <TableCell component =\"th\" scope = \"user\">{user.firstName}</TableCell>\n                                <TableCell align=\"right\">{user.lastName}</TableCell>\n                                <TableCell align=\"right\">{user.email}</TableCell>\n                                <TableCell align=\"right\">{this.formatDate(new Date(user.birthday))}</TableCell>\n                                <TableCell align=\"right\">{user.isActive.toString()}</TableCell>\n                                <TableCell align=\"right\"><button onClick={() => this.props.onDelete(user._id)}> Delete </button></TableCell>\n                                <TableCell align=\"right\"><button onClick={() => this.props.onUpdate(user._id)}> Update </button></TableCell>\n                                <TableCell align=\"right\"><button onClick={() => this.props.onCheck(user._id)}> Check Items </button></TableCell>\n\n                                \n                                \n                            </TableRow>\n                        ) : 'No users found'}\n                    </TableBody>\n                </Table>\n             </TableContainer>\n             <TablePagination \n                rowsPerPageOptions = {[5, 10, 25]}\n                component=\"div\"\n                count={this.props.list.length}\n                rowsPerPage={this.state.rowsPerPage}\n                page={this.state.page}\n                onChangePage={this.handleChangePage}\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n        </div>); \n    }\n}\nexport default UserList",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":3,"column":8,"nodeType":"108","messageId":"109","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":8,"column":8,"nodeType":"108","messageId":"109","endLine":8,"endColumn":21},{"ruleId":"106","severity":1,"message":"110","line":4,"column":8,"nodeType":"108","messageId":"109","endLine":4,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"107","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":21},{"ruleId":"106","severity":1,"message":"111","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":13},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"110","line":2,"column":8,"nodeType":"108","messageId":"109","endLine":2,"endColumn":16},{"ruleId":"106","severity":1,"message":"112","line":9,"column":8,"nodeType":"108","messageId":"109","endLine":9,"endColumn":13},{"ruleId":"106","severity":1,"message":"113","line":12,"column":9,"nodeType":"108","messageId":"109","endLine":12,"endColumn":18},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'UserContainer' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'axios' is defined but never used.","'Paper' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]