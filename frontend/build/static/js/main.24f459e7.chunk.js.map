{"version":3,"sources":["components/CreateUser.js","components/UserList.js","utils/axios.js","utils/history.js","components/UserContainer.js","App.js","reportWebVitals.js","components/UpdateUser.js","components/CreateItem.js","components/ItemList.js","components/SearchItem.js","components/UserInfo.js","components/ItemContainer.js","components/UpdateItem.js","components/ResetPassword.js","components/Login.js","utils/theme.js","index.js"],"names":["CreateUser","state","firstName","lastName","password","email","birthday","onChange","event","setState","target","name","value","submitForm","props","onCreate","Date","type","this","placeholder","date","onClick","React","Component","UserList","rowsPerPage","page","handleChangePage","handleChangeRowsPerPage","formatDate","getDate","getMonth","getFullYear","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","list","length","slice","map","user","component","scope","isActive","toString","onDelete","_id","onUpdate","onCheck","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","instance","axios","create","baseURL","withCredentials","history","UserContainer","userInput","error","err","console","log","alert","getUsers","get","then","response","data","catch","deleteUser","userId","window","confirm","delete","createUser","post","updateUser","push","checkItems","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UpdateUser","formattedDate","getUser","toISOString","substr","put","match","params","id","userID","defaultValue","CreateItem","description","ItemList","item","parseInt","action","action1","SearchItem","onSubmit","UserInfo","divStyle","display","justifyContent","ItemContainer","items","ItemRows","getUID","getItems","getSearchedItems","deleteItem","itemId","createItem","updateItem","submitSearch","aux","style","UpdateItem","getIID","item_id","getItem","ResetPassword","oldPassword","newPassword","newPasswordRepeat","users","Login","location","href","goToPage","theme","createMuiTheme","overrides","MuiTableCell","head","backgroundColor","color","body","fontSize","MuiTableRow","root","Routing","useState","render","setRender","isLogged","setIsLogged","useEffect","ThemeProvider","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.24f459e7.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass CreateUser extends React.Component {\r\n    state = {\r\n        firstName : '',\r\n        lastName : '',\r\n        password : '',\r\n        email: '',\r\n        birthday : ''\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.onCreate({\r\n            firstName : this.state.firstName,\r\n            lastName : this.state.lastName,\r\n            password : this.state.password,\r\n            email: this.state.email,\r\n            birthday : new Date(this.state.birthday)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <p><input name  ='firstName' type='text' onChange={this.onChange} value={this.state.firstName} placeholder='Please enter your firstname' /></p>\r\n                    <p><input name='lastName' type='text' onChange={this.onChange} value={this.state.lastName} placeholder='Please enter your lastname' /></p>\r\n                    <p><input name='email' type='text' onChange={this.onChange} value={this.state.email} placeholder='Please enter your email address' /></p>\r\n                    <p><input name='password' type='password' onChange={this.onChange} value={this.state.password} placeholder=\"Enter a password\" /></p>\r\n                    <p><input name='birthday' type='date' onChange={this.onChange} value={this.state.date} placeholder='Enter your birthday date' /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\nexport default CreateUser","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\n  const useStyles = theme =>({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\n\r\nclass UserList  extends React.Component {\r\n    state = {\r\n        rowsPerPage: 5,\r\n        page: 0\r\n    }\r\n\r\n    handleChangePage = (event, page) => {\r\n        this.setState({ page });\r\n    };\r\n    \r\n    handleChangeRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value });\r\n    };\r\n\r\n    formatDate = birthday => {\r\n        let formatted_date = birthday.getDate() + '/' + (birthday.getMonth()+1) + '/' + birthday.getFullYear();\r\n        return formatted_date;\r\n    }\r\n\r\n    render() { \r\n        let { page, rowsPerPage } = this.state\r\n        return (<div>\r\n            <h1>\r\n                Users: \r\n            </h1>\r\n            <TableContainer>\r\n                <Table  aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>First Name</TableCell>\r\n                            <TableCell align=\"right\">Last Name</TableCell>\r\n                            <TableCell align=\"right\">Email</TableCell>\r\n                            <TableCell align=\"right\">Birthday</TableCell>\r\n                            <TableCell align=\"right\">isActive</TableCell>\r\n                            <TableCell align=\"right\">Delete</TableCell>\r\n                            <TableCell align=\"right\">Update</TableCell>\r\n                            <TableCell align=\"right\">Check Items</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {this.props.list.length > 0 ? this.props.list.slice(page * rowsPerPage, (page * rowsPerPage) + rowsPerPage).map((user) =>\r\n                            <TableRow key = {user.firstName}>\r\n                                <TableCell component =\"th\" scope = \"user\">{user.firstName}</TableCell>\r\n                                <TableCell align=\"right\">{user.lastName}</TableCell>\r\n                                <TableCell align=\"right\">{user.email}</TableCell>\r\n                                <TableCell align=\"right\">{this.formatDate(new Date(user.birthday))}</TableCell>\r\n                                <TableCell align=\"right\">{user.isActive.toString()}</TableCell>\r\n                                <TableCell align=\"right\"><button onClick={() => this.props.onDelete(user._id)}> Delete </button></TableCell>\r\n                                <TableCell align=\"right\"><button onClick={() => this.props.onUpdate(user._id)}> Update </button></TableCell>\r\n                                <TableCell align=\"right\"><button onClick={() => this.props.onCheck(user._id)}> Check Items </button></TableCell>\r\n\r\n                                \r\n                                \r\n                            </TableRow>\r\n                        ) : 'No users found'}\r\n                    </TableBody>\r\n                </Table>\r\n             </TableContainer>\r\n             <TablePagination \r\n                rowsPerPageOptions = {[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.props.list.length}\r\n                rowsPerPage={this.state.rowsPerPage}\r\n                page={this.state.page}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n            />\r\n        </div>); \r\n    }\r\n}\r\nexport default UserList","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8000',\r\n    withCredentials: true\r\n})\r\n\r\nexport default instance","import { createBrowserHistory as history } from 'history';\r\n\r\nexport default history();","import CreateUser from './CreateUser';\r\nimport UserList from './UserList';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios';\r\nimport history from '../utils/history';\r\n\r\nclass UserContainer extends React.Component {\r\n\r\n  state = {\r\n    userInput: []\r\n  }\r\n\r\n  error = err => {\r\n    console.log(err);\r\n    alert(\"Error\");\r\n  }\r\n\r\n  getUsers = () => {\r\n    axios.get('/users/').then(response => {\r\n      this.setState({userInput: response.data})\r\n    }).catch(err => {\r\n      this.error(err)\r\n    })\r\n  }\r\n\r\n  deleteUser = userId => {\r\n    if(window.confirm(\"Are you sure?\")) {\r\n      axios.delete('/users/' + userId, { isActive: false}).then(() => {\r\n        this.getUsers();\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  createUser = user => {\r\n    if(user.firstName && user.lastName && user.password && user.birthday) {\r\n      axios.post('/users', user).then(() => {\r\n        this.getUsers();\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    } else alert(\"Please complete all the fields\")\r\n  }\r\n\r\n  updateUser = userId => {\r\n    history.push('/users/' + userId);\r\n  }\r\n\r\n  checkItems = userId => {\r\n    history.push('/users/' + userId + '/items/');\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CreateUser onCreate={this.createUser} />\r\n        <UserList list={this.state.userInput} onDelete={this.deleteUser} onUpdate={this.updateUser} onCheck = {this.checkItems} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContainer;\r\n","import UserContainer from \"./components/UserContainer\";\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n     return (\r\n       <div className=\"App\">\r\n            Home Page\r\n       </div>\r\n    )\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\n\r\n\r\n\r\nclass UpdateUser extends React.Component {\r\n    state = {\r\n        firstName : '',\r\n        lastName : '',\r\n        password : '',\r\n        birthday : '',\r\n        email: '',\r\n        formattedDate: ''\r\n    }\r\n\r\n    getUser = userId => {\r\n        axios.get('/users/' + userId).then(response => {\r\n          this.setState({ ...response.data })\r\n          this.formatDate(new Date(this.state.birthday))\r\n        }).catch(err => {\r\n          console.log('eroare');\r\n        })\r\n      }\r\n\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.id;\r\n        console.log(userID);\r\n        this.getUser(userID);\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    formatDate = birthday => {\r\n        let date = birthday.toISOString().substr(0, 10);\r\n        this.setState({ formattedDate: date })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state.firstName && this.state.lastName && this.state.password && this.state.birthday) {\r\n            axios.put('/users/' + this.props.match.params.id, \r\n            { firstName: this.state.firstName, \r\n            lastName: this.state.lastName,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            birthday: new Date(this.state.birthday)}).then(() => {\r\n                alert(\"User succesfully updated!\");\r\n                history.push('/users');\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        } else {\r\n            alert(\"Please complete all the fields!\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <p><input name='firstName' type='text' value = {this.state.firstName} onChange={this.onChange} /></p>\r\n                    <p><input name='lastName' type='text' value = {this.state.lastName} onChange={this.onChange}   /></p>\r\n                    <p><input name='email' type='text' value={this.state.email} onChange={this.onChange} /></p>\r\n                    <p><input name='password' type='text' placeholder='New password' onChange={this.onChange}   /></p>\r\n                    <p><input name='birthday' type='date' defaultValue = {this.state.formattedDate} onChange={this.onChange}  /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\nexport default UpdateUser","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nclass CreateItem extends React.Component {\r\n    state = {\r\n        name: '',\r\n        description: '',\r\n        userID: ''\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.onCreate({\r\n            name: this.state.name,\r\n            description: this.state.description,\r\n            userID: this.props.id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <h2>Create Items</h2>\r\n                    <p><input name='name' type='text' onChange={this.onChange} value={this.state.name} placeholder='Please enter item name' /></p>\r\n                    <p><input name='description' type='text' onChange={this.onChange} value={this.state.description} placeholder='Please enter item description' /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default CreateItem","import React from 'react';\r\nimport axios from '../utils/axios'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nclass ItemList extends React.Component {\r\n    render() {\r\n        return <div>\r\n                <h1>Items list: </h1>\r\n                <TableContainer>\r\n                <Table  aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Item</TableCell>\r\n                            <TableCell>Description</TableCell>\r\n                            <TableCell>Update</TableCell>\r\n                            <TableCell>Delete</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.props.list.length > 0 ? this.props.list.map((item) =>\r\n                            <TableRow key = {item._id}>\r\n                                <TableCell component =\"th\" scope = \"item\">{item.name}</TableCell>\r\n                                <TableCell>{item.description}</TableCell>\r\n                                <TableCell><button onClick={() => this.props.onUpdate(item._id)}>Update</button></TableCell>\r\n                                <TableCell><button onClick={() => this.props.onDelete(item._id)}>Delete</button></TableCell>\r\n                            </TableRow>\r\n                        ) : 'No items found'}\r\n                    </TableBody>\r\n                </Table>\r\n             </TableContainer>\r\n             <TablePagination \r\n                rowsPerPageOptions = {[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.props.count}\r\n                rowsPerPage={this.props.rowsPerPage}\r\n                page={parseInt(this.props.page)}\r\n                onChangePage={this.props.action}\r\n                onChangeRowsPerPage={this.props.action1}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n \r\nexport default ItemList;","import React from 'react';\r\n\r\nclass SearchItem  extends React.Component {\r\n    state = { \r\n        name : ''\r\n    }\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n    submitForm = () =>{\r\n        this.props.onSubmit(this.state.name)\r\n    }\r\n    render() { \r\n        return <div>\r\n            <h2>Search Items</h2>\r\n            <p><input name='name' type='text' onChange={this.onChange} value={this.state.name} placeholder='Search item by name or description' /></p>       \r\n            <button onClick={this.submitForm}>Search</button>\r\n        </div>\r\n    }\r\n}\r\n \r\nexport default SearchItem;","import React from 'react';\r\n\r\nclass UserInfo extends React.Component {\r\n    formatDate = birthday => {\r\n        let formatted_date = birthday.getDate() + '/' + (birthday.getMonth()+1) + '/' + birthday.getFullYear();\r\n        return formatted_date;\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n                <p>{this.props.user.firstName}</p>\r\n                <p>{this.props.user.lastName}</p>\r\n                <p>{this.formatDate(new Date(this.props.user.birthday))}</p>\r\n            </div>  \r\n            \r\n            \r\n        );\r\n    }\r\n}\r\n \r\nexport default UserInfo;","import CreateItem from './CreateItem';\r\nimport ItemList from './ItemList';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios';\r\nimport history from '../utils/history';\r\nimport SearchItem from './SearchItem';\r\nimport UserContainer from './UserContainer';\r\nimport UserInfo from './UserInfo';\r\n\r\nconst divStyle = {\r\n  display: 'flex',\r\n  justifyContent: 'space-between'\r\n}\r\n\r\nclass ItemContainer extends React.Component {\r\n\r\n  state = {\r\n    items: [],\r\n    user : [],\r\n    count : 0,\r\n    page : 0,\r\n    rowsPerPage : 5,\r\n    ItemRows : 0\r\n  }\r\n\r\n  getUID = () => {\r\n      let id = this.props.match.params.id;\r\n      return id;\r\n  }\r\n\r\n  error = err => {\r\n    console.log(err);\r\n    alert(\"Error\");\r\n  }\r\n\r\n  //get items regarding pagination\r\n  getItems = (id,page,rowsPerPage) => {\r\n    axios.get('/users/' + id + '/items/?page='+ page +'&rows=' + rowsPerPage).then(response => {\r\n      console.log(response);\r\n      this.setState({ items: response.data[1],count : response.data[0].length,user : response.data[2]})\r\n    }).catch(err => {\r\n      this.error(err)\r\n    })\r\n  }\r\n\r\n  getSearchedItems = name => {\r\n    axios.get('/users/' + this.getUID() + '/items/search/' + name ).then(response => {\r\n      this.setState({ items: response.data})\r\n    }).catch(err => {\r\n      this.error(err)\r\n    })\r\n  }\r\n\r\n  deleteItem = itemId => {\r\n    if(window.confirm(\"Are you sure?\")) {\r\n      axios.delete('/users/' + this.getUID() + '/items/' + itemId).then(() => {\r\n        this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    }\r\n  }\r\n\r\n  createItem = item => {\r\n    if(item.name && item.description) {\r\n      axios.post('/users/' + this.getUID() + '/items', item).then(() => {\r\n        this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n      }).catch(err => {\r\n        this.error(err);\r\n      })\r\n    } else alert(\"Please complete all the fields\")\r\n  }\r\n\r\n  updateItem = itemId => {\r\n    history.push('/users/' + this.getUID() + '/items/' + itemId);\r\n  }\r\n\r\n  submitSearch = name =>{\r\n    this.getSearchedItems(name)\r\n    this.setState({count : this.state.items.length})\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n  }\r\n\r\n  handleChangePage = (event,page) => {\r\n    this.setState({ page : page }, () => {\r\n      let aux = this.state.page > 0 ? (this.state.rowsPerPage*page) : this.state.ItemRows;\r\n      this.getItems(this.getUID(),aux,this.state.rowsPerPage);\r\n    })\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value},() =>{\r\n      this.getItems(this.getUID(),this.state.page,this.state.rowsPerPage);\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={divStyle}>\r\n          <CreateItem  onCreate={this.createItem} />\r\n          <UserInfo user={this.state.user}></UserInfo>\r\n          <SearchItem onSubmit={this.submitSearch}/>\r\n        </div>\r\n        <ItemList list={this.state.items}\r\n                  count={this.state.count}  \r\n                  page={this.state.page} \r\n                  rowsPerPage={this.state.rowsPerPage} \r\n                  onDelete={this.deleteItem} \r\n                  onUpdate={this.updateItem}\r\n                  action ={this.handleChangePage}\r\n                  action1 ={this.handleChangeRowsPerPage}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ItemContainer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\n\r\nclass UpdateItem extends React.Component {\r\n    state = {\r\n        name: '',\r\n        description: ''\r\n    }\r\n\r\n    getUID = () => {\r\n        let uid = this.props.match.params.id\r\n        return uid;\r\n    }\r\n\r\n    getIID = () => {\r\n        let iid = this.props.match.params.item_id\r\n        return iid\r\n    }\r\n\r\n    getItem = () => {\r\n        axios.get('/users/' + this.getUID() + '/items/' + this.getIID()).then(response => {\r\n          this.setState({ ...response.data })\r\n        }).catch(err => {\r\n          console.log('eroare');\r\n        })\r\n      }\r\n\r\n    componentDidMount() {\r\n        this.getItem(this.getIID())\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state.name && this.state.description) {\r\n            axios.put('/users/' + this.getUID() + '/items/' + this.getIID(), \r\n            { name: this.state.name, \r\n              description: this.state.description }).then(() => {\r\n                  alert(\"Item succesfully updated\");\r\n                  history.push('/users/' + this.getUID() + '/items')\r\n              }).catch(err => {\r\n                  console.log(err);\r\n              })\r\n        } else {\r\n            alert(\"Please complete all the fields\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return  <div>\r\n                    <p><input name='name' type='text' onChange={this.onChange} value={this.state.name}/></p>\r\n                    <p><input name='description' type='text' onChange={this.onChange} value={this.state.description} /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default UpdateItem","import React from 'react';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\n\r\nclass ResetPassword extends React.Component {\r\n    state = {\r\n        firstName :'',\r\n        oldPassword : '',\r\n        newPassword : '',\r\n        newPasswordRepeat : ''\r\n      }\r\n    getUsers = () => {\r\n        axios.get('/reset/').then(response => {\r\n          this.setState({users:response.data })\r\n        }).catch(err => {\r\n          console.log('eroare');\r\n        })\r\n      }\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n         })\r\n    }\r\n    componentDidMount() {\r\n        this.getUsers();\r\n    }\r\n    submitForm = () => {\r\n        console.log(\"State: \", this.state)\r\n        if(this.state.firstName && this.state.oldPassword && this.state.newPassword && this.state.newPasswordRepeat){\r\n            if(this.state.newPassword === this.state.newPasswordRepeat){\r\n                axios.put('/reset/' + this.state.firstName,{password : this.state.newPassword}).then(()=>{\r\n                    alert(\"Password succesfully reseted\")\r\n                    history.push('/login')\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }else{alert(\"Check new password\")}\r\n        }else{alert(\"Please complete all the fields\") }\r\n    }\r\n    render() { \r\n        return (<div>\r\n                    <p><input name='firstName' type='text' value = {this.state.firstName} onChange={this.onChange} placeholder=\"First Name\" /></p>\r\n                    <p><input name='oldPassword' type='text' value = {this.state.lastName} onChange={this.onChange} placeholder=\"Old Password\" /></p>\r\n                    <p><input name='newPassword' type='text' value = {this.state.password} onChange={this.onChange} placeholder=\"New Password\"  /></p>\r\n                    <p><input name='newPasswordRepeat' type='text' value = {this.state.newPasswordRepeat} onChange={this.onChange} placeholder=\"New Password Repeat\" /></p>\r\n                    \r\n                    <button onClick={this.submitForm}>Submit</button>\r\n        </div>  )\r\n    }\r\n}\r\n \r\nexport default ResetPassword;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from '../utils/axios'\r\nimport history from '../utils/history';\r\nimport UserContainer from './UserContainer';\r\n\r\nclass Login extends React.Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        password: ''\r\n    }\r\n\r\n    onChange = event =>{\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        if(this.state.firstName && this.state.password){\r\n            console.log(this.state)\r\n            axios.post('/login', { firstName: this.state.firstName, password: this.state.password }).then(user => {\r\n                console.log(\"Here it is:\", user)\r\n                if(user.data.password) {\r\n                    alert(\"Succesful login!\");\r\n                    window.location.href = '/users'\r\n                } else {\r\n                    alert(\"Invalid credentials!\");\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                alert(\"Error\");\r\n            })\r\n        } else {\r\n            alert(\"Please complete all fields!\")\r\n        }\r\n    }\r\n    goToPage = () =>{\r\n        history.push('/resetPassword');\r\n    }\r\n    render() {\r\n        return  <div>\r\n                    <p><input name='firstName' type='text' onChange={this.onChange} value={this.state.firstName} placeholder='First name' /></p>\r\n                    <p><input name='password' type='password' onChange={this.onChange} value={this.state.password} placeholder=\"Password\" /></p>\r\n                    <button onClick={this.submitForm}>Login</button>\r\n                    <button onClick={this.goToPage}>ResetPassword</button>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default Login;","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    overrides: {\r\n        MuiTableCell: {\r\n            head: {\r\n                backgroundColor: 'black',\r\n                color: 'white',\r\n            },\r\n            body: {\r\n                fontSize: 14,\r\n            },\r\n        },\r\n\r\n        MuiTableRow: {\r\n            root: {\r\n                '&:nth-of-type(odd)': {\r\n                  backgroundColor: 'hover',\r\n                },\r\n            },\r\n        },\r\n    }\r\n});\r\n\r\nexport default theme","import React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Router, Switch, Route } from 'react-router-dom';\r\nimport UpdateUser from './components/UpdateUser';\r\nimport history from './utils/history';\r\nimport UserContainer from './components/UserContainer';\r\nimport ItemContainer from './components/ItemContainer';\r\nimport UpdateItem from './components/UpdateItem';\r\nimport ResetPassword from './components/ResetPassword';\r\nimport Login from './components/Login';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport theme from './utils/theme';\r\nimport axios from './utils/axios';\r\n\r\n\r\nconst Routing = () => {\r\n  let [render, setRender] = useState(false)\r\n  let [isLogged, setIsLogged] = useState(false)\r\n\r\n  useEffect(() => {\r\n    axios.get('/isLogged').then(() => {\r\n      setRender(true)\r\n      setIsLogged(true)\r\n    }).catch(() => {\r\n      setRender(true)\r\n      setIsLogged(false)\r\n    })\r\n  }, [])\r\n\r\n  return render ? (\r\n    <ThemeProvider theme={theme}>\r\n      <Router history={history}>\r\n        {isLogged ?\r\n          <Switch>\r\n            <Route exact path=\"/\" component={App} />\r\n            <Route exact path=\"/users\" component={UserContainer} />\r\n            <Route exact path=\"/users/:id\" component={UpdateUser} />\r\n            <Route exact path=\"/users/:id/items/\" component={ItemContainer} />\r\n            <Route exact path=\"/users/:id/items/:item_id\" component={UpdateItem} />         \r\n          </Switch> : \r\n          <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/resetPassword\" component={ResetPassword}/> \r\n          </Switch>\r\n          }\r\n      </Router>\r\n    </ThemeProvider>\r\n  ) : null\r\n}\r\n\r\nReactDOM.render(<Routing />, document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}